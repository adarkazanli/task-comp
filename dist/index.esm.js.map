{"version":3,"file":"index.esm.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/TaskComponent.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport './TaskComponent.css';\n\nconst TaskComponent = ({ task, taskColors, backgroundColor, className }) => {\n    const formatTime = (time) => {\n        if (!time) return '--:--';\n        return time;\n    };\n\n    // Get the appropriate background color based on task status\n    const getBackgroundColor = (status) => {\n        const colorScheme = taskColors[status] || taskColors.backlog;\n        return colorScheme.background;\n    };\n\n    // Get text color based on background\n    const getTextColor = (status) => {\n        const colorScheme = taskColors[status] || taskColors.backlog;\n        return colorScheme.font;\n    };\n\n    const getRemainingTimeClass = (remainingTime) => {\n        return remainingTime < 0 ? 'task-remaining negative' : 'task-remaining';\n    };\n\n    const formatRemainingTime = (remainingTime) => {\n        const absoluteTime = Math.abs(Math.round(remainingTime));\n        \n        if (absoluteTime < 60) {\n            return `${remainingTime < 0 ? '-' : ''}${absoluteTime} min`;\n        }\n        \n        const hours = Math.floor(absoluteTime / 60);\n        const minutes = absoluteTime % 60;\n        \n        let formattedTime = '';\n        if (hours > 0) {\n            formattedTime += `${hours}h`;\n        }\n        if (minutes > 0) {\n            formattedTime += ` ${minutes}m`;\n        }\n        \n        return `${remainingTime < 0 ? '-' : ''}${formattedTime}`;\n    };\n\n    const renderActionButtons = (status) => {\n        if (status === 'closed') {\n            return null;  // Don't show any buttons for completed tasks\n        }\n        \n        return (\n            <>\n                <button className=\"start-button\">▶ Start</button>\n                <button className=\"complete-button\">✓ Complete</button>\n            </>\n        );\n    };\n\n    const renderAnticipatedTime = (status, startTime, endTime) => {\n        if (status === 'closed') {\n            return null;\n        }\n        \n        return (\n            <span className=\"task-time\">\n                Anticipated: {formatTime(startTime)} - {formatTime(endTime)}\n            </span>\n        );\n    };\n\n    const renderRemainingTime = (status, remainingTime) => {\n        if (status === 'closed') {\n            return null;\n        }\n        \n        return (\n            <span className={getRemainingTimeClass(remainingTime)}>\n                Remaining: {formatRemainingTime(remainingTime)}\n            </span>\n        );\n    };\n\n    return (\n        <div \n            className=\"task-card\" \n            style={{ \n                backgroundColor: getBackgroundColor(task.status),\n                color: getTextColor(task.status)\n            }}\n        >\n            <div className=\"task-main\">\n                <h1>{task.title}</h1>\n                <div className=\"task-controls\">\n                    <span className=\"time-estimate\">{task.estimated_time} min estimated</span>\n                    {renderActionButtons(task.status)}\n                </div>\n            </div>\n            <div className=\"task-metadata\">\n                <span className=\"task-id\">ID: {task.id}</span>\n                {renderAnticipatedTime(task.status, task.anticipated_start_time, task.anticipated_end_time)}\n                {renderRemainingTime(task.status, task.remaining_time)}\n            </div>\n            <div className=\"task-description\">\n                <ReactMarkdown>{task.description}</ReactMarkdown>\n            </div>\n        </div>\n    );\n  };\n\nTaskComponent.propTypes = {\n    task: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        estimated_time: PropTypes.number.isRequired,\n        anticipated_start_time: PropTypes.string,\n        anticipated_end_time: PropTypes.string,\n        remaining_time: PropTypes.number.isRequired,\n        status: PropTypes.string.isRequired\n    }).isRequired,\n    backgroundColor: PropTypes.string.isRequired,\n    taskColors: PropTypes.shape({\n        backlog: PropTypes.shape({\n            background: PropTypes.string.isRequired,\n            font: PropTypes.string.isRequired\n        }).isRequired,\n        planned: PropTypes.shape({\n            background: PropTypes.string.isRequired,\n            font: PropTypes.string.isRequired\n        }).isRequired,\n        closed: PropTypes.shape({\n            background: PropTypes.string.isRequired,\n            font: PropTypes.string.isRequired\n        }).isRequired\n    }).isRequired\n};\n\nexport default TaskComponent;"],"names":["TaskComponent","_ref","task","taskColors","backgroundColor","className","formatTime","time","getBackgroundColor","status","colorScheme","backlog","background","getTextColor","font","getRemainingTimeClass","remainingTime","formatRemainingTime","absoluteTime","Math","abs","round","concat","hours","floor","minutes","formattedTime","renderActionButtons","React","createElement","Fragment","renderAnticipatedTime","startTime","endTime","renderRemainingTime","style","color","title","estimated_time","id","anticipated_start_time","anticipated_end_time","remaining_time","ReactMarkdown","description","propTypes","PropTypes","shape","number","isRequired","string","planned","closed"],"mappings":"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"}